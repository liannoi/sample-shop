@model Shop.WebUI.ViewModels.GoodsFind.BaseViewModel

@{
    ViewBag.Title = "Home";
}

@using (Html.BeginForm())
{
    <div class="container mb-5">
        <div class="row">
            <div class="col-md-3">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-12 block-selectable p-3">
                            <h4>Manufacturers</h4>
                            <hr>
                            <div>
                                @for (var i = 0; i < Model.ManufacturerChecks.Count; i++)
                                {
                                    <div class="mt-2">
                                        @Html.HiddenFor(x => Model.ManufacturerChecks[i].ManufacturerId)
                                        @Html.CheckBoxFor(x => Model.ManufacturerChecks[i].IsCheck, new {@class = "checkbox"})
                                        @Html.DisplayFor(x => Model.ManufacturerChecks[i].ManufacturerName)
                                        @Html.HiddenFor(x => Model.ManufacturerChecks[i].ManufacturerName)
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container-fluid mt-5">
                    <div class="row">
                        <div class="col-md-12 block-selectable p-3">
                            <h4>Categories</h4>
                            <hr>
                            <div>
                                @for (var i = 0; i < Model.CategoryChecks.Count; i++)
                                {
                                    <div class="mt-2">
                                        @Html.HiddenFor(x => Model.CategoryChecks[i].CategoryId)
                                        @Html.CheckBoxFor(x => Model.CategoryChecks[i].IsCheck, new {@class = "checkbox"})
                                        @Html.DisplayFor(x => Model.CategoryChecks[i].CategoryName)
                                        @Html.HiddenFor(x => Model.CategoryChecks[i].CategoryName)
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-9">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-md-11">
                            @Html.EditorFor(e => e.GoodName, new {htmlAttributes = new {@class = "form-control w-100", placeholder = "Search"}})
                        </div>
                        <div class="col-md-1">
                            <button id="find" type="button" class="btn btn-primary">Find</button>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 mt-5">
                            <div class="card-columns" id="goods"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Styles{
    <link href="~/ClientApp/vendor/css/goodsFind-index.css" rel="stylesheet"/>
}

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="~/ClientApp/vendor/js/cartHelper.js"></script>
    <script>
        'use strict';

        document.querySelector('#find').addEventListener('click',
            function() {
                this.blur();

                // This is good, no need to try to rewrite to pure JavaScript.
                const dataForm = $('form').serialize();

                fetch(new Request("@Url.Action("Index", "GoodsFind")"),
                    {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: dataForm
                    }).then(
                    function(response) {
                        if (response.status !== 200) {
                            return;
                        }

                        // This is good, no need to try to rewrite to pure JavaScript.
                        $('#goods').load("@Url.Action("_GoodByFilter", "GoodsFind")",
                            function() {
                                const cartHelper = new CartHelper(document.querySelectorAll('.btn-cmd-add'),
                                    '@Url.Action("Add", "Users")',
                                    'Product successfully added to cart.');
                                cartHelper.subscribe();
                            });
                    });
            });

        window.addEventListener('load',
            () => {
                document.querySelector('#find').click();
            });
    </script>
}